
# imperatively update the deployment image
# get the container_name by describing the deployment
kubectl set image deployment/<deployment_entity_name> <container_name>=nginx:1.21

# imperatively edit deployment
k edit deployment <deployment_entity_name>

# roll out status
kubectl rollout status deployment/deployment_entity_name 

# roll out history
kubectl rollout history deployment/deployment_entity_name 

# roll out revert
kubectl rollout undo deployment/deployment_entity_name

# get config maps
kubectl get configmaps
kubectl describe configmaps <?>

# create config map # imperative 
kubectl create configmap <config-name> --from-literal=<KEY1>=<value1> --from-literal=<KEY2>=<value2> 

kubectl create configmap <config-name> --from-file <file-path.properties>

# create config map declarative
kubectl create -f <sample-app-config-map.yaml>

# get config maps